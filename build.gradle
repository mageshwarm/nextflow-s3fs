/*
 * Copyright 2020, Seqera Labs
 * Copyright 2013-2019, Centre for Genomic Regulation (CRG)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.1"
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

group = 'io.nextflow'
version = '1.0.8'

targetCompatibility=1.8
sourceCompatibility=1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile ('org.slf4j:slf4j-api:1.7.10')
    compile ('com.amazonaws:aws-java-sdk-s3:1.11.172') { exclude group: 'commons-logging', module: 'commons-logging' }
    compile ('com.google.guava:guava:11.0.1')
    compile ('org.apache.tika:tika-core:1.5')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
    testCompile 'log4j:log4j:1.2.17'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.10'
    testCompile 'org.slf4j:jcl-over-slf4j:1.7.10'
    testCompile 'com.github.marschall:zipfilesystem-standalone:1.0.0'
    testCompile 'com.github.marschall:memoryfilesystem:0.5.4'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile "commons-lang:commons-lang:2.6"
    testCompile 'commons-io:commons-io:2.4'

}


ext.ossrhUserName = hasProperty('ossrhUserName') ? properties.get('ossrhUserName') : null
ext.ossrhPassword = hasProperty('ossrhPassword') ? properties.get('ossrhPassword') : null
ext.ossrhFullName = hasProperty('ossrhFullName') ? properties.get('ossrhFullName') : null
ext.ossrhEmail = hasProperty('ossrhEmail') ? properties.get('ossrhEmail') : null

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUserName, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUserName, password: ossrhPassword)
            }

            pom.project {
                name 'Nextflow'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'A JSR-203 complaint file system provider for Amazon S3 storage'
                url 'http://www.nextflow.io'

                scm {
                    connection 'scm:git:https://github.com/nextflow-io/nextflow-s3fs.git'
                    developerConnection 'scm:git:git@github.com:nextflow-io/nextflow-s3fs.git'
                    url 'https://github.com/nextflow-io/nextflow-s3fs'
                }

                licenses {
                    license {
                        name 'GPLv3'
                        url 'http://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id ossrhUserName
                        name ossrhFullName
                        email ossrhEmail
                    }
                }

            }
        }
    }
}

task deploy(dependsOn: [compileJava, uploadArchives]){ }

task compile(dependsOn: [compileJava, compileTestJava]) { }

/*
 * Configure Nextflow staging plugin
 * https://github.com/Codearte/gradle-nexus-staging-plugin
 */
nexusStaging {
    packageGroup = 'io.nextflow'
    delayBetweenRetriesInMillis = 10_000
}

task release(dependsOn: [closeRepository, promoteRepository]) { }

// Disable strict javadoc checks
// See http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
